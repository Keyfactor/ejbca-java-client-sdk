/*
 * Copyright 2022 Keyfactor
 * Licensed under the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.  You may obtain a
 * copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
 * required by applicable law or agreed to in writing, software distributed
 * under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
 * OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 * thespecific language governing permissions and limitations under the
 * License.
 *
 * EJBCA REST Interface
 * API reference documentation.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.keyfactor.ejbca.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.keyfactor.ejbca.client.JSON;

/**
 * EndEntityProfileResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-08T11:12:50.631-07:00[America/Phoenix]")
public class EndEntityProfileResponse {
  public static final String SERIALIZED_NAME_END_ENTITY_PROFILE_NAME = "end_entity_profile_name";
  @SerializedName(SERIALIZED_NAME_END_ENTITY_PROFILE_NAME)
  private String endEntityProfileName;

  public static final String SERIALIZED_NAME_SUBJECT_DISTINGUISHED_NAME_FIELDS = "subject_distinguished_name_fields";
  @SerializedName(SERIALIZED_NAME_SUBJECT_DISTINGUISHED_NAME_FIELDS)
  private List<String> subjectDistinguishedNameFields = null;

  public static final String SERIALIZED_NAME_SUBJECT_ALTERNATIVE_NAME_FIELDS = "subject_alternative_name_fields";
  @SerializedName(SERIALIZED_NAME_SUBJECT_ALTERNATIVE_NAME_FIELDS)
  private List<String> subjectAlternativeNameFields = null;

  public static final String SERIALIZED_NAME_AVAILABLE_CERTIFICATE_PROFILES = "available_certificate_profiles";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_CERTIFICATE_PROFILES)
  private List<String> availableCertificateProfiles = null;

  public static final String SERIALIZED_NAME_AVAILABLE_CAS = "available_cas";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_CAS)
  private List<String> availableCas = null;

  public EndEntityProfileResponse() {
  }

  public EndEntityProfileResponse endEntityProfileName(String endEntityProfileName) {
    
    this.endEntityProfileName = endEntityProfileName;
    return this;
  }

   /**
   * End Entity profile name
   * @return endEntityProfileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "ExampleEEP", value = "End Entity profile name")

  public String getEndEntityProfileName() {
    return endEntityProfileName;
  }


  public void setEndEntityProfileName(String endEntityProfileName) {
    this.endEntityProfileName = endEntityProfileName;
  }


  public EndEntityProfileResponse subjectDistinguishedNameFields(List<String> subjectDistinguishedNameFields) {
    
    this.subjectDistinguishedNameFields = subjectDistinguishedNameFields;
    return this;
  }

  public EndEntityProfileResponse addSubjectDistinguishedNameFieldsItem(String subjectDistinguishedNameFieldsItem) {
    if (this.subjectDistinguishedNameFields == null) {
      this.subjectDistinguishedNameFields = new ArrayList<>();
    }
    this.subjectDistinguishedNameFields.add(subjectDistinguishedNameFieldsItem);
    return this;
  }

   /**
   * List of Subject DN Attributes
   * @return subjectDistinguishedNameFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[ “CN“ ]", value = "List of Subject DN Attributes")

  public List<String> getSubjectDistinguishedNameFields() {
    return subjectDistinguishedNameFields;
  }


  public void setSubjectDistinguishedNameFields(List<String> subjectDistinguishedNameFields) {
    this.subjectDistinguishedNameFields = subjectDistinguishedNameFields;
  }


  public EndEntityProfileResponse subjectAlternativeNameFields(List<String> subjectAlternativeNameFields) {
    
    this.subjectAlternativeNameFields = subjectAlternativeNameFields;
    return this;
  }

  public EndEntityProfileResponse addSubjectAlternativeNameFieldsItem(String subjectAlternativeNameFieldsItem) {
    if (this.subjectAlternativeNameFields == null) {
      this.subjectAlternativeNameFields = new ArrayList<>();
    }
    this.subjectAlternativeNameFields.add(subjectAlternativeNameFieldsItem);
    return this;
  }

   /**
   * List of Subject Alternative Name fields
   * @return subjectAlternativeNameFields
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[ “RFC822NAME“ ]", value = "List of Subject Alternative Name fields")

  public List<String> getSubjectAlternativeNameFields() {
    return subjectAlternativeNameFields;
  }


  public void setSubjectAlternativeNameFields(List<String> subjectAlternativeNameFields) {
    this.subjectAlternativeNameFields = subjectAlternativeNameFields;
  }


  public EndEntityProfileResponse availableCertificateProfiles(List<String> availableCertificateProfiles) {
    
    this.availableCertificateProfiles = availableCertificateProfiles;
    return this;
  }

  public EndEntityProfileResponse addAvailableCertificateProfilesItem(String availableCertificateProfilesItem) {
    if (this.availableCertificateProfiles == null) {
      this.availableCertificateProfiles = new ArrayList<>();
    }
    this.availableCertificateProfiles.add(availableCertificateProfilesItem);
    return this;
  }

   /**
   * List of available Certificate Profiles
   * @return availableCertificateProfiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[ “ENDUSER“ ]", value = "List of available Certificate Profiles")

  public List<String> getAvailableCertificateProfiles() {
    return availableCertificateProfiles;
  }


  public void setAvailableCertificateProfiles(List<String> availableCertificateProfiles) {
    this.availableCertificateProfiles = availableCertificateProfiles;
  }


  public EndEntityProfileResponse availableCas(List<String> availableCas) {
    
    this.availableCas = availableCas;
    return this;
  }

  public EndEntityProfileResponse addAvailableCasItem(String availableCasItem) {
    if (this.availableCas == null) {
      this.availableCas = new ArrayList<>();
    }
    this.availableCas.add(availableCasItem);
    return this;
  }

   /**
   * List of available Certificate Authorities (CAs)
   * @return availableCas
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[ “ExampleCA“ ]", value = "List of available Certificate Authorities (CAs)")

  public List<String> getAvailableCas() {
    return availableCas;
  }


  public void setAvailableCas(List<String> availableCas) {
    this.availableCas = availableCas;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EndEntityProfileResponse endEntityProfileResponse = (EndEntityProfileResponse) o;
    return Objects.equals(this.endEntityProfileName, endEntityProfileResponse.endEntityProfileName) &&
        Objects.equals(this.subjectDistinguishedNameFields, endEntityProfileResponse.subjectDistinguishedNameFields) &&
        Objects.equals(this.subjectAlternativeNameFields, endEntityProfileResponse.subjectAlternativeNameFields) &&
        Objects.equals(this.availableCertificateProfiles, endEntityProfileResponse.availableCertificateProfiles) &&
        Objects.equals(this.availableCas, endEntityProfileResponse.availableCas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(endEntityProfileName, subjectDistinguishedNameFields, subjectAlternativeNameFields, availableCertificateProfiles, availableCas);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EndEntityProfileResponse {\n");
    sb.append("    endEntityProfileName: ").append(toIndentedString(endEntityProfileName)).append("\n");
    sb.append("    subjectDistinguishedNameFields: ").append(toIndentedString(subjectDistinguishedNameFields)).append("\n");
    sb.append("    subjectAlternativeNameFields: ").append(toIndentedString(subjectAlternativeNameFields)).append("\n");
    sb.append("    availableCertificateProfiles: ").append(toIndentedString(availableCertificateProfiles)).append("\n");
    sb.append("    availableCas: ").append(toIndentedString(availableCas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("end_entity_profile_name");
    openapiFields.add("subject_distinguished_name_fields");
    openapiFields.add("subject_alternative_name_fields");
    openapiFields.add("available_certificate_profiles");
    openapiFields.add("available_cas");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EndEntityProfileResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (EndEntityProfileResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in EndEntityProfileResponse is not found in the empty JSON string", EndEntityProfileResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!EndEntityProfileResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EndEntityProfileResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("end_entity_profile_name") != null && !jsonObj.get("end_entity_profile_name").isJsonNull()) && !jsonObj.get("end_entity_profile_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `end_entity_profile_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("end_entity_profile_name").toString()));
      }
      // ensure the json data is an array
      if ((jsonObj.get("subject_distinguished_name_fields") != null && !jsonObj.get("subject_distinguished_name_fields").isJsonNull()) && !jsonObj.get("subject_distinguished_name_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject_distinguished_name_fields` to be an array in the JSON string but got `%s`", jsonObj.get("subject_distinguished_name_fields").toString()));
      }
      // ensure the json data is an array
      if ((jsonObj.get("subject_alternative_name_fields") != null && !jsonObj.get("subject_alternative_name_fields").isJsonNull()) && !jsonObj.get("subject_alternative_name_fields").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject_alternative_name_fields` to be an array in the JSON string but got `%s`", jsonObj.get("subject_alternative_name_fields").toString()));
      }
      // ensure the json data is an array
      if ((jsonObj.get("available_certificate_profiles") != null && !jsonObj.get("available_certificate_profiles").isJsonNull()) && !jsonObj.get("available_certificate_profiles").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `available_certificate_profiles` to be an array in the JSON string but got `%s`", jsonObj.get("available_certificate_profiles").toString()));
      }
      // ensure the json data is an array
      if ((jsonObj.get("available_cas") != null && !jsonObj.get("available_cas").isJsonNull()) && !jsonObj.get("available_cas").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `available_cas` to be an array in the JSON string but got `%s`", jsonObj.get("available_cas").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EndEntityProfileResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EndEntityProfileResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EndEntityProfileResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EndEntityProfileResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EndEntityProfileResponse>() {
           @Override
           public void write(JsonWriter out, EndEntityProfileResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EndEntityProfileResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EndEntityProfileResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EndEntityProfileResponse
  * @throws IOException if the JSON string is invalid with respect to EndEntityProfileResponse
  */
  public static EndEntityProfileResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EndEntityProfileResponse.class);
  }

 /**
  * Convert an instance of EndEntityProfileResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}


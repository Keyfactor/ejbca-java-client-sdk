/*
 * EJBCA REST Interface
 * API reference documentation.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CaInfoRestResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-10-04T15:03:09.556-07:00[America/Phoenix]")
public class CaInfoRestResponse {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SUBJECT_DN = "subject_dn";
  @SerializedName(SERIALIZED_NAME_SUBJECT_DN)
  private String subjectDn;

  public static final String SERIALIZED_NAME_ISSUER_DN = "issuer_dn";
  @SerializedName(SERIALIZED_NAME_ISSUER_DN)
  private String issuerDn;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public CaInfoRestResponse() {
  }

  public CaInfoRestResponse id(Integer id) {
    
    this.id = id;
    return this;
  }

   /**
   * CA identifier
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "12345678", value = "CA identifier")

  public Integer getId() {
    return id;
  }


  public void setId(Integer id) {
    this.id = id;
  }


  public CaInfoRestResponse name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Certificate Authority (CA) name
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CN=ExampleCA", value = "Certificate Authority (CA) name")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CaInfoRestResponse subjectDn(String subjectDn) {
    
    this.subjectDn = subjectDn;
    return this;
  }

   /**
   * Subject Distinguished Name
   * @return subjectDn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CN=ExampleCA,O=Sample,C=SE", value = "Subject Distinguished Name")

  public String getSubjectDn() {
    return subjectDn;
  }


  public void setSubjectDn(String subjectDn) {
    this.subjectDn = subjectDn;
  }


  public CaInfoRestResponse issuerDn(String issuerDn) {
    
    this.issuerDn = issuerDn;
    return this;
  }

   /**
   * Issuer Distinguished Name
   * @return issuerDn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CN=ExampleCA,O=Sample,C=SE", value = "Issuer Distinguished Name")

  public String getIssuerDn() {
    return issuerDn;
  }


  public void setIssuerDn(String issuerDn) {
    this.issuerDn = issuerDn;
  }


  public CaInfoRestResponse expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration date
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2038-01-19T03:14:07Z", value = "Expiration date")

  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CaInfoRestResponse caInfoRestResponse = (CaInfoRestResponse) o;
    return Objects.equals(this.id, caInfoRestResponse.id) &&
        Objects.equals(this.name, caInfoRestResponse.name) &&
        Objects.equals(this.subjectDn, caInfoRestResponse.subjectDn) &&
        Objects.equals(this.issuerDn, caInfoRestResponse.issuerDn) &&
        Objects.equals(this.expirationDate, caInfoRestResponse.expirationDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, subjectDn, issuerDn, expirationDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CaInfoRestResponse {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    subjectDn: ").append(toIndentedString(subjectDn)).append("\n");
    sb.append("    issuerDn: ").append(toIndentedString(issuerDn)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("subject_dn");
    openapiFields.add("issuer_dn");
    openapiFields.add("expiration_date");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CaInfoRestResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (CaInfoRestResponse.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in CaInfoRestResponse is not found in the empty JSON string", CaInfoRestResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!CaInfoRestResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CaInfoRestResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("subject_dn") != null && !jsonObj.get("subject_dn").isJsonNull()) && !jsonObj.get("subject_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject_dn").toString()));
      }
      if ((jsonObj.get("issuer_dn") != null && !jsonObj.get("issuer_dn").isJsonNull()) && !jsonObj.get("issuer_dn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuer_dn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuer_dn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CaInfoRestResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CaInfoRestResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CaInfoRestResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CaInfoRestResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<CaInfoRestResponse>() {
           @Override
           public void write(JsonWriter out, CaInfoRestResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CaInfoRestResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CaInfoRestResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CaInfoRestResponse
  * @throws IOException if the JSON string is invalid with respect to CaInfoRestResponse
  */
  public static CaInfoRestResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CaInfoRestResponse.class);
  }

 /**
  * Convert an instance of CaInfoRestResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

